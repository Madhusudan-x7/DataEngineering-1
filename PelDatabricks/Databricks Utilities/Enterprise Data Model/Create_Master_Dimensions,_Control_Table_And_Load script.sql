-- Databricks notebook source
CREATE WIDGET TEXT silver_catalog DEFAULT '';
CREATE WIDGET TEXT storage_location DEFAULT '';

-- COMMAND ----------

-- %python
-- silver_catalog = dbutils.widgets.get("silver_catalog")
-- storage_location = dbutils.widgets.get("storage_location")

-- COMMAND ----------

-- MAGIC %md
-- MAGIC Create external location for schema in prod_silver in ADLS
-- MAGIC

-- COMMAND ----------


USE CATALOG `$silver_catalog`;

CREATE SCHEMA IF NOT EXISTS edm_mdm_dim MANAGED LOCATION 'abfss://master@$storage_location.dfs.core.windows.net/silver/edm_mdm_dim';

ALTER SCHEMA edm_mdm_dim
SET TAGS ('model_schema_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_assy_line (
    assy_line_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
    assy_line_ukey string NOT NULL,
    org_skey bigint DEFAULT -1,
    line_code int,
    assy_line_code string,
    line_src_id string,
    line_name string,
    disable_date_utc date,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_assy_line
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_evnt_type (
    evnt_type_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    evnt_type_ukey string NOT NULL,
    evnt_type string,
    evnt_short_name string,
    evnt_long_name string,
    evnt_sub_type string,
    evnt_sub_type_short_name string,
    evnt_sub_type_long_name string,
    story_line string,
    evnt_seq_num string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_evnt_type
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_mkt_sgmt_hier (
    mkt_sgmt_hier_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    mkt_sgmt_hier_ukey string NOT NULL,
    sseg_name string,
    sseg_code int,
    sseg_src_id string,
    sseg_mbr string,
    sseg_mbr_desc string,
    sbt_name string,
    sbt_code int,
    sgmt_bldg_src_id string,
    sbt_mbr string,
    sbt_mbr_desc string,
    sgmt_name string,
    sgmt_code int,
    sgmt_src_id string,
    sgmt_mbr string,
    sgmt_mbr_desc string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_mkt_sgmt_hier
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_fp_product_hier (
    fp_product_hier_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    fp_product_hier_ukey string NOT NULL,
    product_name string,
    product_code int,
    product_src_id string,
    product_complete_unit_flg boolean,
    product_mbr string,
    product_mbr_desc string,
    pf_code int,
    pf_name string,
    pf_mbr string,
    pf_mbr_desc string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_fp_product_hier
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_pcat_grp (
    pcat_grp_skey bigint NOT NULL PRIMARY KEY,
    pcat_grp_ukey string NOT NULL,
    line_type_code string,
    shppbl_flg boolean,
    par_shppbl_flg boolean,
    br_only_flg boolean,
    pcat string,
    end_unit_cat string,
    mfg_vw_flg boolean,
    pdsn_open_vw_flg boolean,
    pel_open_vw_flg boolean,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_pcat_grp
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_fp_bs_hier (
    fp_bs_hier_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    fp_bs_hier_ukey string NOT NULL,
    entity_skey bigint DEFAULT -1 NOT NULL,
    bs_name string,
    bs_code bigint,
    bs_src_id string,
    bs_mbr string,
    bs_mbr_desc string,
    bst_name string,
    bst_code bigint,
    bst_src_id string,
    bst_mbr string,
    bst_mbr_desc string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_fp_bs_hier
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_order_type (
    order_type_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    order_type_ukey string NOT NULL,
    order_type_id int,
    order_type_code string,
    order_type_desc string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_order_type
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_org (
    org_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    org_ukey string NOT NULL,
    entity_skey bigint DEFAULT -1,
    org_name string,
    org_code int COMMENT 'This is a sequence number for the master record in informatica',
    org_src_id string,
    org_plnt_code string COMMENT 'The identifier of the organization from the source\nthis is an alphanumeric identify\n\nField Usage:\nSales by plant\n\n\naka "plant code"',
    org_operating_unit string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_org
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_region_hier (
    region_hier_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    region_hier_ukey string NOT NULL,
    state_name string,
    state_abbr string,
    country_name string,
    census_divs_code int,
    census_divs_name string,
    census_region_code int,
    census_region_name string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_region_hier
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_sales_hier (
    sales_hier_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) NOT NULL PRIMARY KEY,
    sales_hier_ukey string NOT NULL,
    region_hier_skey bigint DEFAULT -1,
    bac_code int,
    bac_name string,
    bac_src_id string,
    bac_br_acct_city string,
    bac_br_acct_state string,
    bac_desc string,
    bac_mbr string,
    bac_mbr_desc string,
    ban_code int,
    ban_name string,
    ban_src_id string,
    ban_mbr string,
    ban_mbr_desc string,
    bal_code string,
    bal_name string,
    bal_src_id string,
    bal_mbr string,
    bal_mbr_desc string,
    sc_name string,
    sc_code string,
    sc_src_id string,
    sc_mbr string,
    sc_mbr_desc string,
    fpsc_name string,
    fpsc_code string,
    fpsc_src_id string,
    fpsc_mbr string,
    fpsc_mbr_desc string,
    sales_org_code int,
    sales_org_name string,
    sales_org_src_id string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_sales_hier
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_date (
    date_skey bigint NOT NULL PRIMARY KEY,
    date_ukey date NOT NULL,
    cal_day_of_mon int,
    cal_day_of_wk int,
    cal_day_of_yr int,
    fiscal_day_of_mon int,
    fiscal_yr int,
    fiscal_qtr int,
    fiscal_mon int,
    fiscal_mon_name string,
    fiscal_wk int,
    fiscal_yr_wk int,
    fiscal_yr_mon int,
    cal_yr int,
    cal_qtr int,
    cal_mon int,
    cal_wk int,
    cal_day_name string,
    cal_mon_name string,
    day_of_wk int,
    is_business_day_flg boolean,
    prior_yr_fiscal_date_skey bigint,
    adj_inv_date_skey bigint,
    adj_pel_booking_date_skey bigint,
    adj_pdsn_book_date_skey bigint,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp_ntz NOT NULL,
    upd_dtm_utc timestamp_ntz NOT NULL
) TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_date
SET TAGS ('model_table_version' = '1_0');

CREATE TABLE edm_mdm_dim.d_entity (
    entity_skey bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1) PRIMARY KEY,
    entity_ukey string NOT NULL,
    affliated_entity_skey bigint DEFAULT -1 NOT NULL,
    entity_num string,
    entity_desc string,
    entity_business_unit string,
    entity_percent_consolidation int,
    entity_percent_ownership int,
    entity_ownership_type string,
    entity_accounting_string string,
    entity_eff_date_utc date,
    entity_change_reason string,
    entity_reject_reason string,
    entity_status string,
    entity_in_oracle boolean,
    entity_in_onestream boolean,
    entity_in_hris boolean,
    entity_in_mfg boolean,
    entity_in_concur boolean,
    entity_in_tax boolean,
    entity_type_name string,
    operational_src string NOT NULL,
    data_src string NOT NULL,
    ins_dtm_utc timestamp NOT NULL,
    upd_dtm_utc timestamp NOT NULL
) COMMENT 'This should look like the division location dim today' TBLPROPERTIES (delta.feature.allowColumnDefaults = 'enabled');

ALTER TABLE edm_mdm_dim.d_entity
SET TAGS ('model_table_version' = '1_0');

ALTER TABLE edm_mdm_dim.d_assy_line
ADD CONSTRAINT `fk__dim_Line_Line_Org_Skey_to_dim_Org_Org_Skey` FOREIGN KEY (org_skey) REFERENCES edm_mdm_dim.d_org(org_skey);

ALTER TABLE edm_mdm_dim.d_org
ADD CONSTRAINT `fk_dim_Organization_Entity_Skey_to_dim_Entity_Entity_Skey` FOREIGN KEY (entity_skey) REFERENCES edm_mdm_dim.d_entity(entity_skey);

ALTER TABLE edm_mdm_dim.d_fp_bs_hier
ADD CONSTRAINT `fk_dim__FP_Brand_Series_Hierarchy__Entity_Skey_to_dim_Entity_Entity_Skey` FOREIGN KEY (entity_skey) REFERENCES edm_mdm_dim.d_entity(entity_skey);

ALTER TABLE edm_mdm_dim.d_sales_hier
ADD CONSTRAINT `fk_dim_Sales_Hierarchy_Branch_Account_Code_Region_to_dim_Region_Hierarchy_Region_Hierarchy_Skey` FOREIGN KEY (region_hier_skey) REFERENCES edm_mdm_dim.d_region_hier(region_hier_skey);

ALTER TABLE edm_mdm_dim.d_date
ADD CONSTRAINT `fk_dim_Date_Prior_Year_Fiscal_Date_SKey_to_dim_Date_Date_Skey` FOREIGN KEY (prior_yr_fiscal_date_skey) REFERENCES edm_mdm_dim.d_date(date_skey);

ALTER TABLE edm_mdm_dim.d_date
ADD CONSTRAINT `fk_dim_Date_Adjusted_Invoice_Date_SKey_to_dim_Date_Date_Skey` FOREIGN KEY (adj_inv_date_skey) REFERENCES edm_mdm_dim.d_date(date_skey);

ALTER TABLE edm_mdm_dim.d_date
ADD CONSTRAINT `fk_dim_Date_Adjusted_Pella_Booking_Date_SKey_to_dim_Date_Date_Skey` FOREIGN KEY (adj_pel_booking_date_skey) REFERENCES edm_mdm_dim.d_date(date_skey);

ALTER TABLE edm_mdm_dim.d_date
ADD CONSTRAINT `fk_dim_Date_Adjusted_Pella_Distribution_Sales_Network_Book_Date_SKey_to_dim_Date_Date_Skey` FOREIGN KEY (adj_pdsn_book_date_skey) REFERENCES edm_mdm_dim.d_date(date_skey);

ALTER TABLE edm_mdm_dim.d_entity
ADD CONSTRAINT `fk_dim_Entity_Affliated_Entity_Skey_to_dim_Entity_Entity_Skey` FOREIGN KEY (affliated_entity_skey) REFERENCES edm_mdm_dim.d_entity(entity_skey);


-- COMMAND ----------

CREATE TABLE `$silver_catalog`.edm_control.edm_generic_load (
  ctl_tbl_id BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) COMMENT 'Control Table ID  defined is an always generate identity column.',
  src_qry STRING COMMENT 'Source Query  is the query used to pull all columns needed to populate target table. Alias columns to match target table column names. In the query the catalog name are parameterized and do not contain the environment\'s name.
Example: 
select businessid OrgUKey, -1 EntSKey, organization_name OrgName, organization_code OrgCode, organization_source_id OrgSrcId, organization_org_code OrgPlantCode, organization_operating_unit OrgOpUnit,Informatcia OpDataSrc, prod_bronze.informatica.organization  DataSrc from {BronzeCatalog}.informatica.organization
',
  tgt_tbl STRING COMMENT 'Target Table is the target table of the load. The catalog will be parameterized and not contains envirnoment name .  Example: {SilverCatalog}.edm_mdm_dim.d_org    ',
  op_data_src STRING COMMENT 'Operational Data Source is the default column in all edm dimensions. Used to identify the domain in which the data is sourced',
  merge_key STRING COMMENT 'Merge Key uniquely identify the record to perform the upsert',
  tgt_tbl_id_col STRING COMMENT 'Target Table Identity Column is the column used as the auto generated column of the target table',
  tgt_load_seq STRING COMMENT 'Target Load Sequence is used to determine load order of the tables',
  src_tbl_wm_col STRING COMMENT 'Source Table Watermark Column is the column from source used to identify data to be pulled in pipeline run. This will likely be something like Last_Update_date',
  Enabled BOOLEAN COMMENT 'Enabled flag is used to determine if the record is active',
  pl_last_run_dtm_utc TIMESTAMP_NTZ,
  pl_last_status STRING,
  last_run_nbk STRING,
  last_upd_wm_dtm_utc TIMESTAMP_NTZ,
  tbl_ver STRING,
  updated_by STRING)
USING delta
TBLPROPERTIES (
  'delta.checkpoint.writeStatsAsJson' = 'false',
  'delta.checkpoint.writeStatsAsStruct' = 'true',
  'delta.columnMapping.mode' = 'name',
  'delta.enableDeletionVectors' = 'true',
  'delta.feature.appendOnly' = 'supported',
  'delta.feature.changeDataFeed' = 'supported',
  'delta.feature.checkConstraints' = 'supported',
  'delta.feature.columnMapping' = 'supported',
  'delta.feature.deletionVectors' = 'supported',
  'delta.feature.generatedColumns' = 'supported',
  'delta.feature.identityColumns' = 'supported',
  'delta.feature.invariants' = 'supported',
  'delta.feature.timestampNtz' = 'supported',
  'delta.minReaderVersion' = '3',
  'delta.minWriterVersion' = '7')

-- COMMAND ----------

INSERT INTO `$silver_catalog`.edm_control.edm_generic_load
( src_qry, tgt_tbl, op_data_src, merge_key, tgt_tbl_id_col, tgt_load_seq, src_tbl_wm_col, Enabled, pl_last_run_dtm_utc, pl_last_status, last_run_nbk, last_upd_wm_dtm_utc, tbl_ver)
VALUES

( 'select distinct
  businessId entity_ukey,
  -1 affliated_entity_skey, -- this is -1  BECAUSE INFOMRMATICA WORK ISNt DONE YET- JIr Ticket in 3.6 
  entity_number entity_num,
  Entity_description entity_desc,
  Entity_business_unit entity_business_unit,
  Entity_percent_consolidation entity_percent_consolidation,
  Entity_percent_ownership entity_percent_ownership,
  Entity_ownership_type entity_ownership_type,
  Entity_accounting_string entity_accounting_string,     
  to_date(Entity_effective_date) entity_eff_date_utc, -- // Entity_effective_date stored as datetime:  2024-07-09T18:29:17.000+00:00, time portion is always 0
  Entity_change_reason entity_change_reason,
  Entity_reject_reason entity_reject_reason,
  Entity_status entity_status,
  Entity_in_oracle entity_in_oracle,
  Entity_in_onestream entity_in_onestream,
  Entity_in_hris entity_in_hris,
  Entity_in_mfg entity_in_mfg,
  Entity_in_concur entity_in_concur,
  Entity_in_tax entity_in_tax,
  "UNKNOWN" entity_type_name,  -- this is UNKNOWN BECAUSE INFOMRMATICA WORK ISNt DONE YET- JIr Ticket in 3.6 
  "{op_data_src}" operational_src,
  nvl(Entity_data_source,"MDM") data_src
  FROM {bronze_catalog}.informatica.entity', 
'{silver_catalog}.edm_mdm_dim.d_entity', 'Informatica', 'entity_ukey, operational_src', 'entity_skey', '1', 
null, true, null, '', '', null, '1_0','jains1@pella.com'),

( 'select 
  businessId org_ukey, 
  -1 entity_skey, 
  Organization_name org_name, 
  Organization_code org_code, 
  Organization_source_id org_src_id, 
  Organization_org_code org_plnt_code,
  Organization_operating_unit org_operating_unit,
  "{op_data_src}" operational_src,
  Organization_data_source data_src
from {bronze_catalog}.informatica.organization o', 
'{silver_catalog}.edm_mdm_dim.d_org', 'Informatica', 'org_ukey, operational_src', 'org_skey', '2', 
null, true, null, '', '', null, '1_0','jains1@pella.com'),

( 'SELECT DISTINCT
  L_businessId assy_line_ukey,
  org_skey, 
  L_Line_code line_code,
  L_Line_line_code assy_line_code,
  L_Line_source_id line_src_id,
  L_Line_name line_name,
  to_date(L_Line_disable_date) disable_date_utc, 
  "{op_data_src}" operational_src,
  L_Line_data_source data_src
FROM 
    {bronze_catalog}.informatica.line l
      join {silver_catalog}.edm_mdm_dim_load_test.d_org o on l.HRCOrganization_to_Line_parent_id_businessId = org_ukey', 
'{silver_catalog}.edm_mdm_dim.d_assy_line', 'Informatica', 'assy_line_ukey, operational_src', 'assy_line_skey', '3', 
null, true, null, '', '', null, '1_0','jains1@pella.com'),

( 'select
-- defaults mkt_sgmt_hier_skey
SS_businessId mkt_sgmt_hier_ukey,
SS_Sales_Segment_name sseg_name,
SS_Sales_Segment_code sseg_code,
SS_Sales_Segment_source_id sseg_src_id,
SS_Sales_Segment_member sseg_mbr,
SS_Sales_Segment_member_description sseg_mbr_desc,
SBT_Segment_Building_Type_name sbt_name,
SBT_Segment_Building_Type_code sbt_code,
SBT_Segment_Building_Type_source_id sgmt_bldg_src_id,
SBT_Segment_Building_Type_member sbt_mbr,
SBT_Segment_Building_Type_member_description sbt_mbr_desc,
Segment_name sgmt_name,
Segment_code sgmt_code,
Segment_source_id sgmt_src_id,
Segment_member sgmt_mbr,
Segment_member_description sgmt_mbr_desc,
"{op_data_src}" operational_src, 
SS_Sales_Segment_data_source data_src
from {bronze_catalog}.informatica.sales_segment ss
  join {bronze_catalog}.informatica.segment_building_type sbt 
    on ss.HRC_Segment_Building_Type_to_Sales_Segment_parent_id_businessId = sbt.SBT_businessId
  join {bronze_catalog}.informatica.segment s on sbt.HRC_Segment_to_Segment_Building_Type_parent_id_businessId = s.businessId', 
'{silver_catalog}.edm_mdm_dim.d_mkt_sgmt_hier', 'Informatica', 'mkt_sgmt_hier_ukey, operational_src', 'mkt_sgmt_hier_skey', '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),


( 'select 
-- fp_product_hier_skey (defaults)
PbusinessId fp_product_hier_ukey,
PProduct_name product_name,
PProduct_code product_code,
PProduct_source_id product_src_id,
PProduct_complete_unit_flag product_complete_unit_flg,
PProduct_member product_mbr,
PProduct_member_description product_mbr_desc,
Product_Family_code pf_code,
Product_Family_name pf_name,
Product_Family_member pf_mbr,
Product_Family_member_description pf_mbr_desc,
"{op_data_src}" operational_src,
nvl(PProduct_data_source,"MDM") data_src
from {bronze_catalog}.informatica.product p
  left outer join  {bronze_catalog}.informatica.product_family pf on p.HRCProduct_Family_to_Product_parent_id_businessId = pf.businessId', 
'{silver_catalog}.edm_mdm_dim.d_fp_product_hier', 'Informatica', 'fp_product_hier_ukey, operational_src', 'fp_product_hier_skey', '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),

( 'select 
--region_hier_skey (defaults)
Code region_hier_ukey,  -- mapping census region code for now 
State state_name,
Code state_abbr,
Country country_name,
Census_Division_Code census_divs_code,
Census_Division_Name census_divs_name,
Census_Region_Code census_region_code,
Census_Region_Name census_region_name,
"{op_data_src}" operational_src,
"profisee" data_src
from {silver_catalog}.profisee.region', 
'{silver_catalog}.edm_mdm_dim.d_region_hier', 'Informatica', 'region_hier_ukey, operational_src', 'region_hier_skey', '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),

( 'with bac_distinct as (
  select distinct 
  BAC_businessId,
  BAC_Branch_Account_Code_code, --bac_code,
  BAC_Branch_Account_Code_name, --bac_name,
  BAC_Branch_Account_Code_source_id, --bac_src_id,
  BAC_Branch_Account_Code_branch_account_city, --bac_br_acct_city,
  BAC_Branch_Account_Code_branch_account_state, -- bac_br_acct_state,
  BAC_Branch_Account_Code_branch_account_description,
  BAC_Branch_Account_Code_regionstate,
  BAC_Branch_Account_Code_member, --bac_mbr,
  BAC_Branch_Account_Code_member_description, --bac_mbr_desc,
  BAC_Branch_Account_Code_data_source,
  HRC_Branch_Account_Number_to_Branch_Account_Code_parent_id_businessId
  from {bronze_catalog}.informatica.branch_account_code
),
ban_bal_distinct as (
  WITH location_max_sub_channel as (
    SELECT
      BAL_businessId,
      BAL_Branch_Account_Location_code, --bal_code,
      BAL_Branch_Account_Location_name, -- bal_name,
      BAL_Branch_Account_Location_source_id, --bal_src_id,
      BAL_Branch_Account_Location_member, --bal_mbr,
      BAL_Branch_Account_Location_member_description, --bal_mbr_desc,
      HRC_Sub_Channel_to_Branch_Account_Location_parent_id_businessId,
      ROW_NUMBER() OVER (
        PARTITION BY bal_businessid
        ORDER BY
          sc.sc_sub_channel_code desc
      ) row_num,
      BAL_Branch_Account_Location_code
    FROM
      {bronze_catalog}.informatica.branch_account_location bal
      left outer join {bronze_catalog}.informatica.sub_channel sc on HRC_Sub_Channel_to_Branch_Account_Location_parent_id_businessid = sc.SC_businessId
  )
  SELECT DISTINCT
    BAL_businessId,
    BAL_Branch_Account_Location_code, --bal_code,
    BAL_Branch_Account_Location_name, -- STILL MISSING field in target
    BAL_Branch_Account_Location_source_id, --bal_src_id,
    BAL_Branch_Account_Location_member, --bal_mbr,
    BAL_Branch_Account_Location_member_description, --bal_mbr_desc,
    HRC_Sub_Channel_to_Branch_Account_Location_parent_id_businessId,    
    BAN_businessId,
    BAN_Branch_Account_Number_code, --ban_code,
    BAN_Branch_Account_Number_name, --ban_name,
    BAN_Branch_Account_Number_source_id, --ban_src_id,
    BAN_Branch_Account_Number_member, --ban_mbr,
    BAN_Branch_Account_Number_member_description, --ban_mbr_desc,
    HRC_Branch_Account_Location_to_Branch_Account_Number_parent_id_businessId  
  FROM
    {bronze_catalog}.informatica.branch_account_number ban
    LEFT OUTER JOIN location_max_sub_channel bal on ban.HRC_Branch_Account_Location_to_Branch_Account_Number_parent_id_businessId = bal.BAL_businessId
    and row_num = 1   
),
sc_distinct as (
  select distinct 
  SC_businessId,
  SC_Sub_Channel_name, --sc_name,
  SC_Sub_Channel_code, --sc_code,
  SC_Sub_Channel_source_id, --sc_src_id,
  SC_Sub_Channel_member, --sc_mbr,
  SC_Sub_Channel_member_description, --sc_mbr_desc,
  HRC_FP_Sub_Channel_to_Sub_Channel_parent_id_businessId
  from {bronze_catalog}.informatica.sub_channel
),
fpsc_distinct as (
  select distinct 
  FPSC_businessId,
  FPSC_FP_Sub_Channel_name, --fpsc_name,
  FPSC_FP_Sub_Channel_code, --fpsc_code,
  FPSC_FP_Sub_Channel_source_id, --fpsc_src_id,
  FPSC_FP_Sub_Channel_member, --fpsc_mbr,
  FPSC_FP_Sub_Channel_member_description, --fpsc_mbr_desc,
  HRC_Sales_Org_to_FP_Sub_Channel_parent_id_businessId
  from  {bronze_catalog}.informatica.fp_sub_channel
),
so_distinct as (
  select distinct 
  businessId,
  Sales_Org_code, --sales_org_code,
  Sales_Org_name, --sales_org_name,
  Sales_Org_source_id --sales_org_src_id,
  from {bronze_catalog}.informatica.sales_org
)
select 
--sales_hier_skey (default)
BAC_businessId sales_hier_ukey,
region_hier_skey, 
BAC_Branch_Account_Code_code bac_code,
BAC_Branch_Account_Code_name bac_name,
BAC_Branch_Account_Code_source_id bac_src_id,
BAC_Branch_Account_Code_branch_account_city bac_br_acct_city,
BAC_Branch_Account_Code_branch_account_state bac_br_acct_state,
BAC_Branch_Account_Code_branch_account_description bac_desc,
BAC_Branch_Account_Code_member bac_mbr,
BAC_Branch_Account_Code_member_description bac_mbr_desc,
BAN_Branch_Account_Number_code ban_code,
BAN_Branch_Account_Number_name ban_name,
BAN_Branch_Account_Number_source_id ban_src_id,
BAN_Branch_Account_Number_member ban_mbr,
BAN_Branch_Account_Number_member_description ban_mbr_desc,
BAL_Branch_Account_Location_code bal_code,
BAL_Branch_Account_Location_name bal_name, -- STILL MISSING field in target
BAL_Branch_Account_Location_source_id bal_src_id,
BAL_Branch_Account_Location_member bal_mbr,
BAL_Branch_Account_Location_member_description bal_mbr_desc,
SC_Sub_Channel_name sc_name,
SC_Sub_Channel_code sc_code,
SC_Sub_Channel_source_id sc_src_id,
SC_Sub_Channel_member sc_mbr,
SC_Sub_Channel_member_description sc_mbr_desc,
FPSC_FP_Sub_Channel_name fpsc_name,
FPSC_FP_Sub_Channel_code fpsc_code,
FPSC_FP_Sub_Channel_source_id fpsc_src_id,
FPSC_FP_Sub_Channel_member fpsc_mbr,
FPSC_FP_Sub_Channel_member_description fpsc_mbr_desc,
Sales_Org_code sales_org_code,
Sales_Org_name sales_org_name,
Sales_Org_source_id sales_org_src_id,
"{op_data_src}" operational_src, -- TBD
BAC_Branch_Account_Code_data_source data_src
from bac_distinct bac
left outer join dev_silver.edm_mdm_dim.d_region_hier reg
  on bac.BAC_Branch_Account_Code_regionstate = reg.state_abbr
left outer join ban_bal_distinct ban
   on bac.HRC_Branch_Account_Number_to_Branch_Account_Code_parent_id_businessId = ban.BAN_businessId
   and ban.HRC_Branch_Account_Location_to_Branch_Account_Number_parent_id_businessId = ban.BAL_businessId 
join sc_distinct sc 
  on HRC_Sub_Channel_to_Branch_Account_Location_parent_id_businessId  = sc.SC_businessId
join fpsc_distinct fpsc 
  on sc.HRC_FP_Sub_Channel_to_Sub_Channel_parent_id_businessId = fpsc.FPSC_businessId
join so_distinct so 
  on fpsc.HRC_Sales_Org_to_FP_Sub_Channel_parent_id_businessId = so.businessId', 
'{silver_catalog}.edm_mdm_dim.d_sales_hier', 'Informatica', 'sales_hier_ukey, operational_src', 'sales_hier_skey', '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),

( 'select 
  DATE_SKEY date_skey,
  DATE_UKEY date_ukey,
  CALENDAR_DAY_OF_MONTH cal_day_of_mon, 
  CALENDAR_DAY_OF_WK cal_day_of_wk,
  CALENDAR_DAY_OF_YR cal_day_of_yr,
  FISCAL_DAY_OF_MONTH fiscal_day_of_mon,   -- THIS IS ALWAYS EMPTY
  FISCAL_YR_NUM fiscal_yr,
  FISCAL_QRTR_OF_YR fiscal_qtr,
  FISCAL_MONTH_OF_YR fiscal_mon,
  CASE --    fiscal_mon_name,
    WHEN FISCAL_MONTH_OF_YR=1 THEN "DEC"
    WHEN FISCAL_MONTH_OF_YR=2 THEN "JAN"
    WHEN FISCAL_MONTH_OF_YR=3 THEN "FEB"
    WHEN FISCAL_MONTH_OF_YR=4 THEN "MAR"
    WHEN FISCAL_MONTH_OF_YR=5 THEN "APR"
    WHEN FISCAL_MONTH_OF_YR=6 THEN "MAY"
    WHEN FISCAL_MONTH_OF_YR=7 THEN "JUN"
    WHEN FISCAL_MONTH_OF_YR=8 THEN "JUL"
    WHEN FISCAL_MONTH_OF_YR=9 THEN "AUG" 
    WHEN FISCAL_MONTH_OF_YR=10 THEN "SEP"
    WHEN FISCAL_MONTH_OF_YR=11 THEN "OCT"
    WHEN FISCAL_MONTH_OF_YR=12 THEN "NOV"
  END as fiscal_mon_name ,    
  FISCAL_WK_OF_YR fiscal_wk,
  FISCAL_YR_WK fiscal_yr_wk,
  FISCAL_MONTH_OF_YR fiscal_yr_mon,
  CALENDAR_YR_NUM cal_yr,
  CALENDAR_QRTR_OF_YR cal_qtr,
  CALENDAR_MONTH_OF_YR cal_mon,
  CALENDAR_WK_OF_YR cal_wk,
  TRANSACTION_DAY_NAME cal_day_name, 
  TRANSACTION_MONTH_NAME cal_mon_name, 
  CALENDAR_DAY_OF_WK day_of_wk,   -- WHAT IS THIS, DUPLICATE OF cal_day_of_wk, type integer
  CASE --is_business_day_flg  (type boolean)
    WHEN TRANSACTION_HOLIDAY="Non-Business" THEN FALSE
    WHEN TRANSACTION_HOLIDAY="Business" THEN TRUE
    ELSE NULL -- "N/A" -- These are older dates, null is fine
  END as is_business_day_flg,
  PREV_FISCAL_CUR_DATE_SKEY prior_yr_fiscal_date_skey,
  ADJ_INV_DATE_SKEY adj_inv_date_skey,
  ADJ_INV_DATE_SKEY adj_pel_booking_date_skey,
  ADJ_PDSN_BOOK_DATE_SKEY adj_pdsn_book_date_skey,
  "{op_data_src}" operational_src, -- TBD
  DATA_SRC data_src
from {bronze_catalog}.pel_edwprod.dim_date_dim', 
'{silver_catalog}.edm_mdm_dim.d_date', 'prod_bronze.pel_edwprod.dim_date_dim', 'date_ukey, operational_src', 'date_skey', '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),

( 'SELECT
  PCAT_SKEY pcat_grp_skey,
  PCAT_UKEY pcat_grp_ukey,
  LINE_TYPE_CODE,
  decode(SHIPPABLE_FLG,2,False,1,True,NULL) shppbl_flg,
  decode(PARENT_SHIPPABLE_FLG,2,False,1,True,NULL) par_shppbl_flg,
  decode(BRANCH_ONLY_FLG,2,False,1,True,NULL) br_only_flg,
  PRODUCT_CATEGORY pcat,
  END_UNIT_CATEGORY end_unit_cat,
  decode(MFG_VIEW_FLG,2,False,1,True,NULL) mfg_vw_flg,
  decode(PDSN_OPENING_VIEW_FLG,2,False,1,True,NULL) pdsn_open_vw_flg,
  decode(PELLA_OPENING_VIEW_FLG,2,False,1,True,NULL) pel_open_vw_flg,
  "prod_bronze.pel_edwprod.dim_pcat_dim" operational_src, -- TBD
  DATA_SRC data_src
from  {bronze_catalog}.pel_edwprod.dim_pcat_dim', 
'{silver_catalog}.edm_mdm_dim.d_pcat_grp', 'prod_bronze.pel_edwprod.dim_pcat_dim', 'pcat_grp_ukey, operational_src', null, '1', 
null, true, null, '', '',null , '1_0','jains1@pella.com'),


( 'SELECT 
  BSbusinessId fp_bs_hier_ukey,
  -1 entity_skey ,-- TBD: Informatica does not set this relationship yet
  BSBrand_Series_name bs_name,
  BSBrand_Series_code bs_code,
  BSBrand_Series_source_id bs_src_id,
  BSBrand_Series_member  bs_mbr,
  BSBrand_Series_member_description bs_mbr_desc,
  Business_Structure_name bst_name,
  Business_Structure_code bst_code,
  Business_Structure_source_id bst_src_id,
  Business_Structure_member bst_mbr,
  Business_Structure_member_description bst_mbr_desc,
  "{op_data_src}" operational_src,
  BSBrand_Series_data_source data_src
FROM {bronze_catalog}.informatica.brand_series bs
JOIN {bronze_catalog}.informatica.business_structure bst 
  ON bs.HRCBusiness_Structure_to_Brand_Series_parent_id_businessId = bst.businessId', 
'{silver_catalog}.edm_mdm_dim.d_fp_bs_hier', 'Informatica', 'pcat_grp_ukey, operational_src', null, '2', 
null, true, null, '', '',null , '1_0','jains1@pella.com')
